package org.itstack.demo.design;

/**
 * @author wanghong
 * @date 2022/7/6
 * @apiNote
 *
 * 以上的实际场景模拟了原型模式在开发中重构的作⽤，但是原型模式的使⽤频率确实不是很⾼。如
 * 果有⼀些特殊场景需要使⽤到，也可以按照此设计模式进⾏优化。
 *
 * 另外原型设计模式的优点包括；便于通过克隆⽅式创建复杂对象、也可以避免重复做初始化操作、
 * 不需要与类中所属的其他类耦合等。但也有⼀些缺点如果对象中包括了循环引⽤的克隆，以及类中
 * 深度使⽤对象的克隆，都会使此模式变得异常麻烦。
 *
 * 终究设计模式是⼀整套的思想，在不同的场景合理的运⽤可以提升整体的架构的质量。永远不要想
 * 着去硬凑设计模式，否则将会引起过渡设计，以及在承接业务反复变化的需求时造成浪费的开发和
 * 维护成本。
 *
 * 初期是代码的优化，中期是设计模式的使⽤，后期是把控全局服务的搭建。不断的加强⾃⼰对全局
 * 能⼒的把控，也加深⾃⼰对细节的处理。可上可下才是⼀个程序员最佳处理⽅式，选取做合适的才
 * 是最好的选择。
 */
public class Summarize{}
